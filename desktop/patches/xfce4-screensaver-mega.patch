diff --git a/.gitignore b/.gitignore
index 11264cb..29bbf14 100644
--- a/.gitignore
+++ b/.gitignore
@@ -19,7 +19,6 @@ xfce4-screensaver-*/
 *.pot
 *.tgz
 *.xz
-*intltool*
 *marshal.c
 *marshal.h
 *~
@@ -27,6 +26,7 @@ config.*
 stamp-*
 
 # File Match
+ABOUT-NLS
 ChangeLog
 compile
 configure
@@ -47,6 +47,15 @@ data/xfce4-screensaver.pc
 data/xfce4-screensavers.menu
 doc/xfce4-screensaver.xml
 po/Makefile.in.in
+po/Makevars.template
+po/Rules-quot
+po/boldquot.sed
+po/en@boldquot.header
+po/en@quot.header
+po/insert-header.sin
+po/quot.sed
+po/remove-potcdate.sed
+po/remove-potcdate.sin
 savers/*.desktop.in
 savers/floaters
 savers/popsquares
diff --git a/Makefile.am b/Makefile.am
index fe87266..aa74d35 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -9,9 +9,9 @@ DISTCHECK_CONFIGURE_FLAGS = \
 SUBDIRS = \
 	src      \
 	savers   \
-	po       \
 	data     \
 	doc      \
+	po       \
 	$(NULL)
 
 EXTRA_DIST = \
@@ -21,25 +21,12 @@ EXTRA_DIST = \
 	COPYING.LGPL         \
 	AUTHORS              \
 	INSTALL              \
-	README.md            \
 	ChangeLog            \
 	NEWS                 \
-	intltool-extract.in  \
-	intltool-merge.in    \
-	intltool-update.in   \
-	$(NULL)
-
-DISTCLEANFILES = \
-	intltool-extract            \
-	intltool-merge              \
-	intltool-update             \
-	./po/.intltool-merge-cache  \
-	./po/.intltool-merge-cache.lock \
 	$(NULL)
 
 MAINTAINERCLEANFILES = \
 	*~             \
-	intltool-*.in  \
 	compile        \
 	configure      \
 	INSTALL        \
diff --git a/configure.ac b/configure.ac
index 984eace..105411f 100644
--- a/configure.ac
+++ b/configure.ac
@@ -23,7 +23,6 @@ dnl Silence warning: `ar: 'u' modifier ignored since 'D' is the default`
 dnl SEE https://www.mail-archive.com/automake-patches@gnu.org/msg07705.html
 AC_SUBST(AR_FLAGS, [cr])
 
-IT_PROG_INTLTOOL([0.50.1])
 AC_PROG_CC
 AM_PROG_CC_C_O
 AC_CANONICAL_HOST
@@ -36,9 +35,12 @@ AC_SUBST(VERSION)
 # Save flags to aclocal
 ACLOCAL="$ACLOCAL $ACLOCAL_FLAGS"
 
-GETTEXT_PACKAGE=xfce4-screensaver
-AC_SUBST(GETTEXT_PACKAGE)
-AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE", [Name of default gettext domain])
+GETTEXT_PACKAGE="$PACKAGE"
+AC_SUBST([GETTEXT_PACKAGE])
+AC_DEFINE_UNQUOTED([GETTEXT_PACKAGE], ["$GETTEXT_PACKAGE"], [Name of default gettext domain])
+
+AM_GNU_GETTEXT([external])
+AM_GNU_GETTEXT_VERSION([0.19.8])
 
 dnl
 dnl Enable gsettings schema macros
@@ -611,6 +613,30 @@ fi
 AM_CONDITIONAL(HAVE_PAM, test x$have_pam = xyes)
 AC_SUBST(HAVE_PAM)
 
+#       Check if Linux-PAM is used.
+
+# OpenPAM has security/pam_types.h instead.
+AC_CHECK_HEADER([security/_pam_types.h],
+                [have_linux_pam="yes"], [have_linux_pam="no"])
+if test "$have_linux_pam" = "yes" ; then
+  AC_DEFINE([HAVE_LINUX_PAM], 1, [Using Linux-PAM], [])
+fi
+
+AC_ARG_WITH([linux-pam-localedir],
+            [AS_HELP_STRING([--with-linux-pam-localedir=LINUX_PAM_LOCALEDIR],
+                            [Path to Linux-PAM localedir, used for auth message filtering])],
+            [linux_pam_localedir="$withval"], [])
+
+if test "$linux_pam_localedir" = "" ; then
+  linux_pam_localedir="`$PKG_CONFIG --variable=prefix pam 2>/dev/null`/share/locale"
+
+  # Provide fallback for Linux-PAM < 1.5.3.
+  if test "$linux_pam_localedir" = "/share/locale" ; then
+    linux_pam_localedir="/usr/share/locale"
+  fi
+fi
+
+AC_SUBST([linux_pam_localedir])
 
 #       Check for the nine billion variants of shadow passwords...
 
@@ -1108,6 +1134,14 @@ echo "
         localstatedir:            ${EXPANDED_LOCALSTATEDIR}
         datadir:                  ${EXPANDED_DATADIR}
         PAM prefix:               ${PAM_PREFIX}
+        Linux-PAM used:           ${have_linux_pam}"
+
+if test "x$have_linux_pam" = "xyes" ; then
+echo \
+"        Linux-PAM localedir:      ${linux_pam_localedir}"
+fi
+
+echo "
         source code location:     ${srcdir}
         compiler:                 ${CC}
         cflags:                   ${CFLAGS}
diff --git a/data/Makefile.am b/data/Makefile.am
index 040ef26..c7c2ccc 100644
--- a/data/Makefile.am
+++ b/data/Makefile.am
@@ -10,19 +10,23 @@ man_MANS = \
 	xfce4-screensaver-preferences.1  \
 	$(NULL)
 
-@INTLTOOL_DESKTOP_RULE@
+xfce4-screensaver-preferences.desktop: xfce4-screensaver-preferences.desktop.in
+	$(AM_V_GEN)$(MSGFMT) --desktop --template $< -d $(top_srcdir)/po -o $@
 
 desktopdir = $(datadir)/applications
 desktop_in_files = xfce4-screensaver-preferences.desktop.in
 desktop_DATA = $(desktop_in_files:.desktop.in=.desktop)
 
-@INTLTOOL_DIRECTORY_RULE@
+# FIXME: xgettext doesn't recognize .directory.in files as desktop files so we
+# use .desktop.in for the translation: is there a proper solution?
+xfce4-screensaver.directory: xfce4-screensaver.desktop.in
+	$(AM_V_GEN)$(MSGFMT) --desktop --template $< -d $(top_srcdir)/po -o $@
 
 directorydir = $(datadir)/desktop-directories
 directory_in_files = \
-	xfce4-screensaver.directory.in  \
+	xfce4-screensaver.desktop.in  \
 	$(NULL)
-directory_DATA = $(directory_in_files:.directory.in=.directory)
+directory_DATA = $(directory_in_files:.desktop.in=.directory)
 
 menudir = $(sysconfdir)/xdg/menus
 menu_DATA = \
@@ -32,8 +36,6 @@ menu_DATA = \
 dbussessionservicedir = $(DBUS_SESSION_SERVICE_DIR)
 dbussessionservice_DATA = org.xfce.ScreenSaver.service
 
-@INTLTOOL_XML_NOMERGE_RULE@
-
 EXTRA_DIST = \
 	$(desktop_in_files)              \
 	$(directory_in_files)            \
diff --git a/data/xfce4-screensaver-preferences.desktop.in b/data/xfce4-screensaver-preferences.desktop.in
index 9877634..42bdf77 100644
--- a/data/xfce4-screensaver-preferences.desktop.in
+++ b/data/xfce4-screensaver-preferences.desktop.in
@@ -1,12 +1,13 @@
 [Desktop Entry]
-_Name=Xfce Screensaver
-_Comment=Set your screensaver preferences
-_GenericName=Screensaver
+Name=Xfce Screensaver
+Comment=Set your screensaver preferences
+GenericName=Screensaver
 Icon=org.xfce.ScreenSaver
 Exec=xfce4-screensaver-preferences
 Terminal=false
 Type=Application
 Categories=GTK;Settings;DesktopSettings;X-XFCE-PersonalSettings;X-XFCE-SettingsDialog;
+Keywords=settings;preferences;screensaver;lock screen;
 OnlyShowIn=XFCE;
 StartupNotify=true
 X-XFCE-Bugzilla-Bugzilla=XFCE
diff --git a/data/xfce4-screensaver.directory.in b/data/xfce4-screensaver.desktop.in
similarity index 69%
rename from data/xfce4-screensaver.directory.in
rename to data/xfce4-screensaver.desktop.in
index f27e82e..8a34f03 100644
--- a/data/xfce4-screensaver.directory.in
+++ b/data/xfce4-screensaver.desktop.in
@@ -1,7 +1,7 @@
 [Desktop Entry]
 Encoding=UTF-8
-_Name=Screensavers
-_Comment=Screensaver themes
+Name=Screensavers
+Comment=Screensaver themes
 Icon=org.xfce.ScreenSaver
 Type=Directory
 OnlyShowIn=XFCE;
diff --git a/po/LINGUAS b/po/LINGUAS
index 83d6d43..9ed0fb1 100644
--- a/po/LINGUAS
+++ b/po/LINGUAS
@@ -1,13 +1,15 @@
-# please keep this list sorted alphabetically
-#
 be
 bg
 ca
 cs
 da
 de
+el
 en_AU
+en_CA
+en_GB
 es
+et
 eu
 fi
 fr
@@ -15,9 +17,12 @@ gl
 he
 hu
 hy_AM
+hye
+id
 is
 it
 ja
+kab
 ko
 lt
 ms
@@ -34,5 +39,6 @@ sr
 sv
 th
 tr
+uk
 zh_CN
-zh_TW
\ No newline at end of file
+zh_TW
diff --git a/po/Makevars b/po/Makevars
new file mode 100644
index 0000000..6a5044a
--- /dev/null
+++ b/po/Makevars
@@ -0,0 +1,80 @@
+# Makefile variables for PO directory in any package using GNU gettext.
+
+# Usually the message domain is the same as the package name.
+DOMAIN = $(PACKAGE)
+
+# These two variables depend on the location of this directory.
+subdir = po
+top_builddir = ..
+
+# These options get passed to xgettext.
+XGETTEXT_OPTIONS = --from-code=UTF-8 --keyword=_ --keyword=N_ \
+	--keyword=C_:1c,2 --keyword=NC_:1c,2 --keyword=g_dngettext:2,3 \
+	--add-comments
+
+# This is the copyright holder that gets inserted into the header of the
+# $(DOMAIN).pot file.  Set this to the copyright holder of the surrounding
+# package.  (Note that the msgstr strings, extracted from the package's
+# sources, belong to the copyright holder of the package.)  Translators are
+# expected to transfer the copyright for their translations to this person
+# or entity, or to disclaim their copyright.  The empty string stands for
+# the public domain; in this case the translators are expected to disclaim
+# their copyright.
+COPYRIGHT_HOLDER = The Xfce development team.
+
+# This tells whether or not to prepend "GNU " prefix to the package
+# name that gets inserted into the header of the $(DOMAIN).pot file.
+# Possible values are "yes", "no", or empty.  If it is empty, try to
+# detect it automatically by scanning the files in $(top_srcdir) for
+# "GNU packagename" string.
+PACKAGE_GNU = no
+
+# This is the email address or URL to which the translators shall report
+# bugs in the untranslated strings:
+# - Strings which are not entire sentences, see the maintainer guidelines
+#   in the GNU gettext documentation, section 'Preparing Strings'.
+# - Strings which use unclear terms or require additional context to be
+#   understood.
+# - Strings which make invalid assumptions about notation of date, time or
+#   money.
+# - Pluralisation problems.
+# - Incorrect English spelling.
+# - Incorrect formatting.
+# It can be your email address, or a mailing list address where translators
+# can write to without being subscribed, or the URL of a web page through
+# which the translators can contact you.
+MSGID_BUGS_ADDRESS =
+
+# This is the list of locale categories, beyond LC_MESSAGES, for which the
+# message catalogs shall be used.  It is usually empty.
+EXTRA_LOCALE_CATEGORIES =
+
+# This tells whether the $(DOMAIN).pot file contains messages with an 'msgctxt'
+# context.  Possible values are "yes" and "no".  Set this to yes if the
+# package uses functions taking also a message context, like pgettext(), or
+# if in $(XGETTEXT_OPTIONS) you define keywords with a context argument.
+USE_MSGCTXT = no
+
+# These options get passed to msgmerge.
+# Useful options are in particular:
+#   --previous            to keep previous msgids of translated messages,
+#   --quiet               to reduce the verbosity.
+MSGMERGE_OPTIONS =
+
+# These options get passed to msginit.
+# If you want to disable line wrapping when writing PO files, add
+# --no-wrap to MSGMERGE_OPTIONS, XGETTEXT_OPTIONS, and
+# MSGINIT_OPTIONS.
+MSGINIT_OPTIONS =
+
+# This tells whether or not to regenerate a PO file when $(DOMAIN).pot
+# has changed.  Possible values are "yes" and "no".  Set this to no if
+# the POT file is checked in the repository and the version control
+# program ignores timestamps.
+PO_DEPENDS_ON_POT = no
+
+# This tells whether or not to forcibly update $(DOMAIN).pot and
+# regenerate PO files on "make dist".  Possible values are "yes" and
+# "no".  Set this to no if the POT file and PO files are maintained
+# externally.
+DIST_DEPENDS_ON_UPDATE_PO = no
diff --git a/po/POTFILES.in b/po/POTFILES.in
index e3ccb4e..38b3eaa 100644
--- a/po/POTFILES.in
+++ b/po/POTFILES.in
@@ -1,7 +1,7 @@
 # List of source files containing translatable strings.
 # Please keep this file sorted alphabetically.
 data/xfce4-screensaver-preferences.desktop.in
-data/xfce4-screensaver.directory.in
+data/xfce4-screensaver.desktop.in
 savers/floaters.c
 savers/popsquares.c
 savers/slideshow.c
@@ -12,11 +12,11 @@ src/gs-auth-pam.c
 src/gs-listener-dbus.c
 src/gs-lock-plug.c
 src/xfce4-screensaver-command.c
-src/xfce4-screensaver-configure
+src/xfce4-screensaver-configure.py
 src/xfce4-screensaver-dialog.c
-[type: gettext/glade]src/xfce4-screensaver-dialog.ui
+src/xfce4-screensaver-dialog.ui
 src/xfce4-screensaver-preferences.c
-[type: gettext/glade]src/xfce4-screensaver-preferences.ui
+src/xfce4-screensaver-preferences.ui
 src/xfce4-screensaver.c
 src/xfce4-screensaver.desktop.in.in
 src/xfcekbd-indicator.c
diff --git a/savers/Makefile.am b/savers/Makefile.am
index 1b20c54..db8910b 100644
--- a/savers/Makefile.am
+++ b/savers/Makefile.am
@@ -24,7 +24,8 @@ xfce-personal-slideshow.desktop.in: xfce-personal-slideshow.desktop.in.in Makefi
 xfce-popsquares.desktop.in: xfce-popsquares.desktop.in.in Makefile
 	$(edit) $< >$@
 
-@INTLTOOL_DESKTOP_RULE@
+%.desktop: %.desktop.in
+	$(AM_V_GEN) $(MSGFMT) --desktop --template $< -d $(top_srcdir)/po -o $@
 
 edit = sed \
 	-e 's|@FLOATERS_XFCE_IMAGE[@]|$(FLOATERS_XFCE_IMAGE)|g'  \
diff --git a/savers/xfce-floaters.desktop.in.in b/savers/xfce-floaters.desktop.in.in
index cb7f856..bc7f599 100644
--- a/savers/xfce-floaters.desktop.in.in
+++ b/savers/xfce-floaters.desktop.in.in
@@ -1,6 +1,6 @@
 [Desktop Entry]
-_Name=Floating Xfce
-_Comment=Bubbles the Xfce logo around the screen
+Name=Floating Xfce
+Comment=Bubbles the Xfce logo around the screen
 Exec=@SAVERDIR@/floaters @FLOATERS_XFCE_IMAGE@
 TryExec=@SAVERDIR@/floaters
 StartupNotify=false
diff --git a/savers/xfce-personal-slideshow.desktop.in.in b/savers/xfce-personal-slideshow.desktop.in.in
index c4091e0..764935c 100644
--- a/savers/xfce-personal-slideshow.desktop.in.in
+++ b/savers/xfce-personal-slideshow.desktop.in.in
@@ -1,6 +1,6 @@
 [Desktop Entry]
-_Name=Slideshow
-_Comment=Display a slideshow from your Pictures folder
+Name=Slideshow
+Comment=Display a slideshow from your Pictures folder
 Exec=@SAVERDIR@/slideshow
 TryExec=@SAVERDIR@/slideshow
 StartupNotify=false
diff --git a/savers/xfce-popsquares.desktop.in.in b/savers/xfce-popsquares.desktop.in.in
index 24d09e4..86c234b 100644
--- a/savers/xfce-popsquares.desktop.in.in
+++ b/savers/xfce-popsquares.desktop.in.in
@@ -1,6 +1,6 @@
 [Desktop Entry]
-_Name=Pop art squares
-_Comment=A pop-art-ish grid of pulsing colors.
+Name=Pop art squares
+Comment=A pop-art-ish grid of pulsing colors.
 Exec=@SAVERDIR@/popsquares
 TryExec=@SAVERDIR@/popsquares
 StartupNotify=false
diff --git a/src/Makefile.am b/src/Makefile.am
index 60bdbea..6d4268e 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -18,6 +18,7 @@ AM_CPPFLAGS = \
 	-DDATADIR=\""$(datadir)"\"                  \
 	-DSYSCONFDIR=\""$(sysconfdir)"\"            \
 	-DXFCELOCALEDIR=\""$(datadir)/locale"\"     \
+	-DLINUXPAMLOCALEDIR=\""$(linux_pam_localedir)"\" \
 	-DSAVERDIR=\""$(saverdir)"\"                \
 	-DTHEMESDIR=\""$(themesdir)"\"              \
 	-DGTKBUILDERDIR=\"$(pkgdatadir)\"           \
@@ -40,7 +41,7 @@ bin_PROGRAMS = \
 	$(NULL)
 
 bin_SCRIPTS = \
-	xfce4-screensaver-configure    \
+	xfce4-screensaver-configure.py    \
 	$(NULL)
 
 libexec_PROGRAMS = \
@@ -56,7 +57,9 @@ noinst_PROGRAMS = \
 desktopdir = $(sysconfdir)/xdg/autostart
 desktop_in_files = xfce4-screensaver.desktop.in
 desktop_DATA = $(desktop_in_files:.desktop.in=.desktop)
-@INTLTOOL_DESKTOP_RULE@
+
+xfce4-screensaver.desktop: xfce4-screensaver.desktop.in
+	$(AM_V_GEN) $(MSGFMT) --desktop --template $< -d $(top_srcdir)/po -o $@
 
 xfce4_screensaver_command_SOURCES = \
 	xfce4-screensaver-command.c  \
@@ -271,7 +274,7 @@ EXTRA_DIST = \
 	debug-screensaver.sh              \
 	gs-marshal.list                   \
 	xfce4-screensaver.desktop.in      \
-	xfce4-screensaver-configure       \
+	xfce4-screensaver-configure.py    \
 	xfce4-screensaver-dialog.css      \
 	xfce4-screensaver-dialog.ui       \
 	xfce4-screensaver-preferences.ui  \
diff --git a/src/gs-auth-pam.c b/src/gs-auth-pam.c
index 8bbbfc3..9b0b501 100644
--- a/src/gs-auth-pam.c
+++ b/src/gs-auth-pam.c
@@ -160,8 +160,10 @@ auth_message_handler (GSAuthMessageStyle   style,
         case GS_AUTH_MESSAGE_PROMPT_ECHO_ON:
             break;
         case GS_AUTH_MESSAGE_PROMPT_ECHO_OFF:
-            if (msg != NULL && g_str_has_prefix (msg, _("Password:"))) {
-                did_we_ask_for_password = TRUE;
+            if (msg != NULL) {
+                did_we_ask_for_password = g_str_equal (msg, pam_dgettext ("Password: ")) ||
+                // "Password:" is the default on OpenPAM.
+                g_str_equal (msg, "Password:");
             }
             break;
         case GS_AUTH_MESSAGE_ERROR_MSG:
diff --git a/src/gs-auth.h b/src/gs-auth.h
index 113ef88..30f577c 100644
--- a/src/gs-auth.h
+++ b/src/gs-auth.h
@@ -26,6 +26,13 @@
 
 G_BEGIN_DECLS
 
+#ifdef HAVE_LINUX_PAM
+#include <libintl.h>
+#define pam_dgettext(msgid) dgettext ("Linux-PAM", msgid)
+#else
+#define pam_dgettext(msgid) (msgid)
+#endif
+
 typedef enum
 {
     GS_AUTH_MESSAGE_PROMPT_ECHO_ON,
diff --git a/src/gs-lock-plug.c b/src/gs-lock-plug.c
index 0a51bb0..733c081 100644
--- a/src/gs-lock-plug.c
+++ b/src/gs-lock-plug.c
@@ -65,7 +65,8 @@
 #define LOGGED_IN_EMBLEM_SIZE 20
 #define LOGGED_IN_EMBLEM_ICON "emblem-default"
 
-static void gs_lock_plug_finalize   (GObject         *object);
+static void gs_lock_plug_constructed   (GObject         *object);
+static void gs_lock_plug_finalize      (GObject         *object);
 
 struct GSLockPlugPrivate {
     GtkWidget   *vbox;
@@ -269,9 +270,9 @@ do_user_switch (GSLockPlug *plug) {
 static void
 set_status_text (GSLockPlug *plug,
                  const char *text) {
-    if (plug->priv->auth_message_label != NULL) {
+    if (plug->priv->auth_message_label != NULL && g_utf8_validate (text, -1, NULL)) {
         gtk_label_set_text (GTK_LABEL (plug->priv->auth_message_label), text);
-        if (g_utf8_strlen (text, 1) == 0) {
+        if (g_utf8_strlen (text, -1) == 0) {
             gtk_widget_hide (GTK_WIDGET (plug->priv->auth_message_label));
         } else {
             gtk_widget_show (GTK_WIDGET (plug->priv->auth_message_label));
@@ -1013,6 +1014,7 @@ gs_lock_plug_class_init (GSLockPlugClass *klass) {
     GtkWidgetClass *widget_class = GTK_WIDGET_CLASS (klass);
     GtkBindingSet  *binding_set;
 
+    object_class->constructed  = gs_lock_plug_constructed;
     object_class->finalize     = gs_lock_plug_finalize;
     object_class->get_property = gs_lock_plug_get_property;
     object_class->set_property = gs_lock_plug_set_property;
@@ -1045,28 +1047,28 @@ gs_lock_plug_class_init (GSLockPlugClass *klass) {
                                                            NULL,
                                                            NULL,
                                                            FALSE,
-                                                           G_PARAM_READWRITE));
+                                                           G_PARAM_READWRITE | G_PARAM_CONSTRUCT_ONLY));
     g_object_class_install_property (object_class,
                                      PROP_LOGOUT_COMMAND,
                                      g_param_spec_string ("logout-command",
                                                           NULL,
                                                           NULL,
                                                           NULL,
-                                                          G_PARAM_READWRITE));
+                                                          G_PARAM_READWRITE | G_PARAM_CONSTRUCT_ONLY));
     g_object_class_install_property (object_class,
                                      PROP_STATUS_MESSAGE,
                                      g_param_spec_string ("status-message",
                                                           NULL,
                                                           NULL,
                                                           NULL,
-                                                          G_PARAM_READWRITE));
+                                                          G_PARAM_READWRITE | G_PARAM_CONSTRUCT_ONLY));
     g_object_class_install_property (object_class,
                                      PROP_SWITCH_ENABLED,
                                      g_param_spec_boolean ("switch-enabled",
                                                            NULL,
                                                            NULL,
                                                            FALSE,
-                                                           G_PARAM_READWRITE));
+                                                           G_PARAM_READWRITE | G_PARAM_CONSTRUCT_ONLY));
     g_object_class_install_property (object_class,
                                      PROP_MONITOR_INDEX,
                                      g_param_spec_int ("monitor-index",
@@ -1075,7 +1077,7 @@ gs_lock_plug_class_init (GSLockPlugClass *klass) {
                                                        0,
                                                        200,
                                                        0,
-                                                       G_PARAM_READWRITE));
+                                                       G_PARAM_READWRITE | G_PARAM_CONSTRUCT_ONLY));
 
     binding_set = gtk_binding_set_by_class (klass);
 
@@ -1573,8 +1575,6 @@ gs_lock_plug_add_login_window (GSLockPlug *plug) {
         gtk_widget_set_no_show_all (plug->priv->auth_switch_button, TRUE);
     }
 
-    redraw_background (plug);
-
     date_time_update (plug);
     gtk_widget_show_all (lock_dialog);
 
@@ -1692,6 +1692,15 @@ gs_lock_plug_init (GSLockPlug *plug) {
     gs_profile_end (NULL);
 }
 
+static void
+gs_lock_plug_constructed (GObject *object) {
+    GSLockPlug *plug = GS_LOCK_PLUG (object);
+
+    redraw_background (plug);
+
+    G_OBJECT_CLASS (gs_lock_plug_parent_class)->constructed (object);
+}
+
 static void
 gs_lock_plug_finalize (GObject *object) {
     GSLockPlug *plug;
@@ -1716,12 +1725,20 @@ gs_lock_plug_finalize (GObject *object) {
 }
 
 GtkWidget *
-gs_lock_plug_new (void) {
-    GtkWidget *result;
-
-    result = g_object_new (GS_TYPE_LOCK_PLUG, NULL);
+gs_lock_plug_new (gboolean logout_enabled,
+                  const gchar *logout_command,
+                  gboolean switch_enabled,
+                  const gchar *status_message,
+                  gint monitor_index) {
+    GtkWidget *plug = g_object_new (GS_TYPE_LOCK_PLUG,
+                                    "logout-enabled", logout_enabled,
+                                    "logout-command", logout_command,
+                                    "switch-enabled", switch_enabled,
+                                    "status-message", status_message,
+                                    "monitor-index", monitor_index,
+                                    NULL);
 
-    gtk_window_set_focus_on_map (GTK_WINDOW (result), TRUE);
+    gtk_window_set_focus_on_map (GTK_WINDOW (plug), TRUE);
 
-    return result;
+    return plug;
 }
diff --git a/src/gs-lock-plug.h b/src/gs-lock-plug.h
index f0c47d6..9b491bb 100644
--- a/src/gs-lock-plug.h
+++ b/src/gs-lock-plug.h
@@ -61,7 +61,11 @@ typedef struct
 } GSLockPlugClass;
 
 GType       gs_lock_plug_get_type       (void);
-GtkWidget * gs_lock_plug_new            (void);
+GtkWidget * gs_lock_plug_new            (gboolean     logout_enabled,
+                                         const gchar *logout_command,
+                                         gboolean     switch_enabled,
+                                         const gchar *status_message,
+                                         gint         monitor_index);
 
 int         gs_lock_plug_run            (GSLockPlug  *plug);
 void        gs_lock_plug_set_sensitive  (GSLockPlug  *plug,
diff --git a/src/xfce4-screensaver-configure b/src/xfce4-screensaver-configure.py
similarity index 100%
rename from src/xfce4-screensaver-configure
rename to src/xfce4-screensaver-configure.py
diff --git a/src/xfce4-screensaver-dialog.c b/src/xfce4-screensaver-dialog.c
index 382d637..0d4dcfe 100644
--- a/src/xfce4-screensaver-dialog.c
+++ b/src/xfce4-screensaver-dialog.c
@@ -158,68 +158,10 @@ static char* request_response(GSLockPlug* plug,
     return text;
 }
 
-/* Adapted from MDM2 daemon/verify-pam.c on 2006-06-13 */
-static const char* maybe_translate_message(const char* msg) {
-    char              *s;
-    const char        *ret;
-    static GHashTable *hash = NULL;
-
-    if (hash == NULL) {
-        /* Here we come with some fairly standard messages so that
-           we have as much as possible translated.  Should really be
-           translated in pam I suppose.  This way we can "change"
-           some of these messages to be more sane. */
-        hash = g_hash_table_new (g_str_hash, g_str_equal);
-        /* login: is whacked always translate to Username: */
-        g_hash_table_insert(hash, "login:",
-                            _("Please enter your username."));
-        g_hash_table_insert(hash, "Username:",
-                            _("Please enter your username."));
-        g_hash_table_insert(hash, "username:", _("Please enter your username."));
-        g_hash_table_insert(hash, "Password:",
-                            "");
-        g_hash_table_insert(hash, "password:",
-                            "");
-        g_hash_table_insert(hash, "You are required to change your password immediately (password aged)",
-                            _("You are required to change your password immediately (password aged)"));
-        g_hash_table_insert(hash, "You are required to change your password immediately (root enforced)",
-                            _("You are required to change your password immediately (root enforced)"));
-        g_hash_table_insert(hash, "Your account has expired; please contact your system administrator",
-                            _("Your account has expired; please contact your system administrator"));
-        g_hash_table_insert(hash, "No password supplied",
-                            _("No password supplied."));
-        g_hash_table_insert(hash, "Password unchanged",
-                            _("Password unchanged."));
-        g_hash_table_insert(hash, "Can not get username",
-                            _("Can not get username."));
-        g_hash_table_insert(hash, "Retype new UNIX password:",
-                            _("Retype your new password."));
-        g_hash_table_insert(hash, "Enter new UNIX password:",
-                            _("Enter your new password."));
-        g_hash_table_insert(hash, "(current) UNIX password:",
-                            _("Enter your current password:"));
-        g_hash_table_insert(hash, "Error while changing NIS password.",
-                            _("Error while changing NIS password."));
-        g_hash_table_insert(hash, "You must choose a longer password",
-                            _("You must choose a longer password."));
-        g_hash_table_insert(hash, "Password has been already used. Choose another.",
-                            _("Password has been already used. Choose another."));
-        g_hash_table_insert(hash, "You must wait longer to change your password",
-                            _("You must wait longer to change your password."));
-        g_hash_table_insert(hash, "Sorry, passwords do not match",
-                            _("Sorry, passwords do not match."));
-        /* FIXME: what about messages which have some variables in them, perhaps try to do those as well */
-    }
-
-    s = g_strstrip(g_strdup(msg));
-    ret = g_hash_table_lookup(hash, s);
-    g_free(s);
-
-    if (ret != NULL) {
-        return ret;
-    } else {
-        return msg;
-    }
+static gboolean status_text_should_be_hidden(const char* msg) {
+    return g_str_equal(msg, pam_dgettext("Password: ")) ||
+           // "Password:" is the default on OpenPAM.
+           g_str_equal(msg, "Password:");
 }
 
 static gboolean auth_message_handler(GSAuthMessageStyle   style,
@@ -240,7 +182,7 @@ static gboolean auth_message_handler(GSAuthMessageStyle   style,
 
     ret = TRUE;
     *response = NULL;
-    message = maybe_translate_message(msg);
+    message = status_text_should_be_hidden(msg) ? "" : msg;
 
     switch (style) {
         case GS_AUTH_MESSAGE_PROMPT_ECHO_ON:
@@ -384,28 +326,8 @@ static gboolean popup_dialog_idle(gpointer user_data) {
 
     gs_profile_start(NULL);
 
-    widget = gs_lock_plug_new();
-
-    if (enable_logout) {
-        g_object_set(widget, "logout-enabled", TRUE, NULL);
-    }
-
-    if (logout_command) {
-        g_object_set(widget, "logout-command", logout_command, NULL);
-    }
-
-    if (enable_switch) {
-        g_object_set(widget, "switch-enabled", TRUE, NULL);
-    }
-
-    if (status_message) {
-        g_object_set(widget, "status-message", status_message, NULL);
-    }
-
-    g_object_set(widget, "monitor-index", monitor_index, NULL);
-
+    widget = gs_lock_plug_new(enable_logout, logout_command, enable_switch, status_message, monitor_index);
     gtk_widget_set_size_request(widget, dialog_width, dialog_height);
-
     g_signal_connect(GS_LOCK_PLUG(widget), "response", G_CALLBACK(response_cb), NULL);
     g_signal_connect(widget, "show", G_CALLBACK(show_cb), NULL);
 
@@ -544,6 +466,10 @@ int main(int    argc,
     GError *error = NULL;
     char   *nolock_reason = NULL;
 
+    /* The order matters since xfce_textdomain sets default domain. */
+#ifdef HAVE_LINUX_PAM
+    xfce_textdomain ("Linux-PAM", LINUXPAMLOCALEDIR, "UTF-8");
+#endif
     xfce_textdomain (GETTEXT_PACKAGE, XFCELOCALEDIR, "UTF-8");
 
     gs_profile_start(NULL);
diff --git a/src/xfce4-screensaver-preferences.c b/src/xfce4-screensaver-preferences.c
index 88cf7f6..f1f8b06 100644
--- a/src/xfce4-screensaver-preferences.c
+++ b/src/xfce4-screensaver-preferences.c
@@ -47,7 +47,7 @@
 #include "xfce4-screensaver-preferences-ui.h"
 
 #define GPM_COMMAND "xfce4-power-manager-settings"
-#define CONFIGURE_COMMAND "xfce4-screensaver-configure"
+#define CONFIGURE_COMMAND "xfce4-screensaver-configure.py"
 
 enum {
     NAME_COLUMN = 0,
diff --git a/src/xfce4-screensaver.desktop.in.in b/src/xfce4-screensaver.desktop.in.in
index d9e7b58..46dceb6 100644
--- a/src/xfce4-screensaver.desktop.in.in
+++ b/src/xfce4-screensaver.desktop.in.in
@@ -1,8 +1,8 @@
 [Desktop Entry]
 Type=Application
-_Name=Xfce Screensaver
-_Comment=Launch screensaver and locker program
-_GenericName=Screensaver
+Name=Xfce Screensaver
+Comment=Launch screensaver and locker program
+GenericName=Screensaver
 Icon=org.xfce.ScreenSaver
 Exec=xfce4-screensaver
 OnlyShowIn=XFCE;
